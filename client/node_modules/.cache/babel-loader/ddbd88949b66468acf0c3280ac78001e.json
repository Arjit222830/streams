{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VISHWAS\\\\Desktop\\\\React-me\\\\stream\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props.stream);\n    if (!this.props.stream) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:/Users/VISHWAS/Desktop/React-me/stream/client/src/components/streams/StreamEdit.js"],"names":["React","_","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAK1BC,UAAD,IAAe;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KAPoC;AAAA;;AACrCG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWV,WAAX,CAAuB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDC,EAAAA,MAAM,GAAE;AACJP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWK,MAAvB;AACA,QAAG,CAAC,KAAKL,KAAL,CAAWK,MAAf,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,eAEG,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAEjB,CAAC,CAACkB,IAAF,CAAO,KAAKN,KAAL,CAAWK,MAAlB,EAA0B,OAA1B,EAAkC,aAAlC,CAA3B;AAA6E,MAAA,QAAQ,EAAE,KAAKV,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADJ;AAMH;;AAnBoC;;AAsBzC,MAAMY,eAAe,GAAE,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACtCZ,EAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,SAAO;AAACH,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAHD;;AAKA,eAAed,OAAO,CAACkB,eAAD,EAAiB;AAACjB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAjB,CAAP,CAAmDE,UAAnD,CAAf","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit= (formValues)=> {\r\n        console.log(formValues);\r\n    };\r\n\r\n    render(){\r\n        console.log(this.props.stream);\r\n        if(!this.props.stream)\r\n            return <div>Loading...</div>\r\n        return (\r\n            <div>\r\n               <h3>Edit a Stream</h3>\r\n               <StreamForm initialValues={_.pick(this.props.stream, 'title','description')} onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (state, ownProps)=>{\r\n    console.log(state);\r\n    return {stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchStream, editStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}