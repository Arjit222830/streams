{"ast":null,"code":"import streams from '../apis/streams';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:/Users/VISHWAS/Desktop/React-me/stream/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,YAA1D,EAAwEC,aAAxE,EAAuFC,WAAvF,QAA0G,SAA1G;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAU;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAI;AACvB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAGC,UAAD,IAAe,OAAOC,QAAP,EAAiBC,QAAjB,KAA4B;AAClE,QAAM;AAAEP,IAAAA;AAAF,MAAYO,QAAQ,GAAGC,IAA7B;AACA,QAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGL,UAAJ;AAAgBL,IAAAA;AAAhB,GAAzB,CAAvB;AACAM,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,aAAP;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACApB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACH,CALM;AAOP,OAAO,MAAMC,YAAY,GAAE,MAAM,MAAOP,QAAP,IAAoB;AACjD,QAAMG,QAAQ,GAAE,MAAMnB,OAAO,CAACwB,GAAR,CAAY,UAAZ,CAAtB;AACAR,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEN,aAAP;AAAsBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAGC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AAClD,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAACO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAE,CAACD,EAAD,EAAKX,UAAL,KAAmB,MAAOC,QAAP,IAAmB;AAC3D,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAAC4B,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BX,UAA9B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEO;AAA/B,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMU,YAAY,GAAGH,EAAD,IAAO,MAAOV,QAAP,IAAmB;AACjD,QAAMhB,OAAO,CAAC8B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AACAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEJ,aAAP;AAAsBK,IAAAA,OAAO,EAAEc;AAA/B,GAAD,CAAR;AACH,CAHM","sourcesContent":["import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types'\r\n\r\nexport const signIn = (userId)=>{\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    }\r\n};\r\n\r\nexport const signOut = ()=>{\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n};\r\n\r\nexport const createStream= (formValues)=> async (dispatch, getState)=>{\r\n    const { userId }= getState().auth;\r\n    const response = await streams.post('/streams', {...formValues, userId} );\r\n    dispatch({type: CREATE_STREAM, payload: response.data});\r\n    history.push('/');\r\n};\r\n\r\nexport const fetchStreams= () => async (dispatch) => {\r\n    const response= await streams.get('/streams');\r\n    dispatch({type: FETCH_STREAMS, payload: response.data});\r\n};\r\n\r\nexport const fetchStream= (id) => async (dispatch) => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n    dispatch({ type: FETCH_STREAM, payload:response.data});\r\n};\r\n\r\nexport const editStream= (id, formValues)=> async (dispatch)=> {\r\n    const response=  await streams.put(`/streams/${id}`, formValues);\r\n    dispatch({ type: FETCH_STREAM, payload: response})\r\n};\r\n\r\nexport const deleteStream= (id)=> async (dispatch)=> {\r\n    await streams.delete(`/streams/${id}`);\r\n    dispatch({type: DELETE_STREAM, payload: id});\r\n};"]},"metadata":{},"sourceType":"module"}