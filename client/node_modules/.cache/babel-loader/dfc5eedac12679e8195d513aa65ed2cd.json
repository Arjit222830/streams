{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VISHWAS\\\\Desktop\\\\React-me\\\\stream\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport flv from 'flv.js';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) return;\n    const {\n      id\n    } = this.props.match.params;\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }\n    }, \"Loading...\");\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoRef,\n      style: {\n        width: '100%'\n      },\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, description));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/VISHWAS/Desktop/React-me/stream/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","flv","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","match","params","id","buildPlayer","componentDidUpdate","player","stream","createPlayer","type","url","attachMediaElement","current","load","render","title","description","width","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAeR,KAAK,CAACS,SAAN,EAAf;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKH,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA,SAAKC,WAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKD,WAAL;AACH;;AAEDA,EAAAA,WAAW,GAAG;AACV,QAAG,KAAKE,MAAL,IAAe,CAAC,KAAKT,KAAL,CAAWU,MAA9B,EACI;AAEJ,UAAM;AAACJ,MAAAA;AAAD,QAAM,KAAKN,KAAL,CAAWI,KAAX,CAAiBC,MAA7B;AACA,SAAKI,MAAL,GAAab,GAAG,CAACe,YAAJ,CAAiB;AAC1BC,MAAAA,IAAI,EAAE,KADoB;AAE1BC,MAAAA,GAAG,EAAG,8BAA6BP,EAAG;AAFZ,KAAjB,CAAb;AAIA,SAAKG,MAAL,CAAYK,kBAAZ,CAA+B,KAAKb,QAAL,CAAcc,OAA7C;AACA,SAAKN,MAAL,CAAYO,IAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKjB,KAAL,CAAWU,MAAf,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEJ,UAAM;AAACQ,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAsB,KAAKnB,KAAL,CAAWU,MAAvC;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,GAAG,EAAE,KAAKT,QAAjB;AAA2B,MAAA,KAAK,EAAE;AAACmB,QAAAA,KAAK,EAAE;AAAR,OAAlC;AAAmD,MAAA,QAAQ,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAL,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAHJ,CADJ;AAOH;;AAxCoC;;AA2CzC,MAAME,eAAe,GAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,SAAO;AAAEb,IAAAA,MAAM,EAAEY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACnB,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeZ,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,UAA1C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\nimport flv from 'flv.js';\r\n\r\nclass StreamShow extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.videoRef= React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        \r\n        this.props.fetchStream(this.props.match.params.id);\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.buildPlayer();\r\n    }\r\n\r\n    buildPlayer() {\r\n        if(this.player || !this.props.stream)\r\n            return;\r\n        \r\n        const {id}= this.props.match.params;\r\n        this.player= flv.createPlayer({\r\n            type: 'flv',\r\n            url: `http://localhost:8000/live/${id}.flv`\r\n        });\r\n        this.player.attachMediaElement(this.videoRef.current);\r\n        this.player.load();\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.stream)\r\n            return <div>Loading...</div>;\r\n\r\n        const {title, description}= this.props.stream\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} style={{width: '100%'}} controls/>\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}